<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zcd.dao.UserDao">
  <resultMap id="BaseResultMap" type="com.zcd.model.User">
    <id column="id" property="id" jdbcType="INTEGER"/>
    <result column="username" property="username" jdbcType="VARCHAR"/>
    <result column="password" property="password" jdbcType="VARCHAR"/>
    <result column="age" property="age" jdbcType="INTEGER"/>
    <result column="VerifyCode" property="VerifyCode" jdbcType="VARCHAR"/>
<!--    <result column="headImage" property="headImage" jdbcType="BLOB"/>-->
  </resultMap>




  <select id="selectByName" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    *
    from user
    where id = #{name,jdbcType=VARCHAR}
  </select>

  <select id="login" parameterType="String" resultMap="BaseResultMap">
    select *
    from user
    where
    username = #{username,jdbcType=VARCHAR}
    AND password = #{password,jdbcType=VARCHAR};
    <!--<if test="username!=null and username!=''">username = #{username,jdbcType=VARCHAR}</if>
    <if test="password!=null and password!=''">AND password = #{password,jdbcType=VARCHAR};</if>-->
  </select>

  <update id="updateByVerifyCode" parameterType="com.zcd.model.User">
    update user
    set VerifyCode = #{VerifyCode,jdbcType=VARCHAR}
  </update>


  <insert id="insert" parameterType="com.zcd.model.User">
    insert into user (username, password,age,VerifyCode,create_datetime
                        )

    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},#{age,jdbcType=INTEGER},
            #{VerifyCode,jdbcType=VARCHAR},#{createDatetime})
  </insert>

  <delete id="deleteMulti">
    DELETE FROM user
    WHERE id IN
    <foreach collection="array" open="(" close=")" separator="," item="id">
      #{id}
    </foreach>
  </delete>

  <select id="getById" resultType="com.zcd.model.User">
    SELECT
   *
    FROM
    user AS a
    WHERE
    a.id = #{id}
  </select>



  <update id="update">
    UPDATE
      user
    SET
      username = #{username},
      password = #{password},
      age = #{age},
      modify_datetime = #{modifyDatetime}
    WHERE id = #{id}
  </update>

  <!--copy过来的伪代码,意思就是: 先查t1表和t3表,然后把满足on后面条件的结果加入到t1表中
    不满足的显示为null或者空,再把这表的结果集跟t2表左连接,即满足t2.paper_id=t3.paper_id
    的数据加入到之前的结果集中,然后对三个表的查询结果集用where进行判断-->
  <!--<select id="list" parameterType="java.lang.String" resultMap="ResultMap">
      select
          t1.*,
          t2.paper_id,
          t2.sort_no,
          t2.sort_no_prefix,
          t2.create_time,
          t2.commit_time,
          t2.paperStatus,
          t2.paperName
      from audit_report as t1 left join audit_report_paper as t3 on
          t1.audit_report_id = t3.audit_report_id
                              left join paper as t2 on t2.paper_id = t3.paper_id
      where t1.status > 0 and t1.auditReportId = #{auditReportId,jdbcType=VARCHAR}
  </select>-->



  <!--<sql id="Base_Column_List">
    id, user_name, password, age
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List"/>
    from user_t
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_t
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zcd.model.User">
    insert into user_t (id, user_name, password,
    age)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
    #{age,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zcd.model.User">
    insert into user_t
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="age != null">
        age,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zcd.model.User">
    update user_t
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zcd.model.User">
    update user_t
    set user_name = #{userName,jdbcType=VARCHAR},
    password = #{password,jdbcType=VARCHAR},
    age = #{age,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>-->
</mapper>